apiVersion: apps/v1
kind: Deployment
metadata:
  name: { { .Release.Name } }
  namespace: { { .Values.namespace } }
  labels:
    app: { { .Release.Name } }
    release: { { .Release.Name } }
    heritage: { { .Release.Service } }
spec:
  replicas: { { .Values.replicaCount } }
  selector:
    matchLabels:
      app: { { .Release.Name } }
      release: { { .Release.Name } }
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: { { .Release.Name } }
        release: { { .Release.Name } }
    spec:
      containers:
        - name: { { .Release.Name } }
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: { { .Values.image.pullPolicy } }
          ports:
            - containerPort: {{ .Values.application.containerPort }}
          env:
            {{- range $key, $value := .Values.application.env}}
            - name: { { $key } }
              value: { { $value | quote } }
            {{- end }}
          args:
          {{- range $key, $value := .Values.application.args }}
            {{- if $value }}
            - --{{ $key }}={{ $value }}
            {{- else }}
            - --{{ $key }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: { { .Values.application.containerPort } }
          readinessProbe:
            httpGet:
              path: { { .Values.application.healthCheck } }
              port: http
            initialDelaySeconds:
              { { .Values.application.readinessInitialDelaySeconds } }
            periodSeconds: { { .Values.application.readinessPeriodSeconds } }
            timeoutSeconds: { { .Values.application.timeoutSeconds } }
            resources: { { - toYaml .Values.resources | nindent 12 } }
