apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      release: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.application.containerPort }}
          env:
            {{- range $key, $value := .Values.application.env}}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          args:
          {{- range $key, $value := .Values.application.args }}
            {{- if $value }}
            - --{{ $key }}={{ $value }}
            {{- else }}
            - --{{ $key }}
            {{- end }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: {{ .Values.application.healthCheck }}
              port: {{ .Values.application.containerPort }}
            initialDelaySeconds:
              {{ .Values.application.readinessInitialDelaySeconds }}
            periodSeconds: {{ .Values.application.readinessPeriodSeconds }}
            timeoutSeconds: {{ .Values.application.timeoutSeconds }}
          resources: 
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
